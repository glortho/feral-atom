// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/stylesheets/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";
@import "colors";

atom-text-editor, :host {
    background-color: @base03;
    color: @base0;

    .invisible-character,
    .indent-guide {
        color: @base01;
    }

    .gutter {
        min-width: .3em;
    }

    .gutter .line-number {
        opacity: 1;
    }

    .gutter .line-number.folded,
    .gutter .line-number:after,
    .fold-marker:after {
        color: @magenta;
    }

    .cursor {
        border-color: @base3;
    }

    .selection .region {
        background-color: @base02;
        color: @base03;
    }

    .line-number.cursor-line-no-selection {
        background-color: @base01;
    }

    .wrap-guide {
        background-color: @base02;
    }
}

.bracket-matcher .region {
    background-color: @base1;
    opacity: 0.25;
}

.comment {
    color: @base01;
}

.entity:not(.js) {
	color: @orange;
}

.keyword {
    color: @violet;
}

.storage.type {
    color: @violet;
}

.constant {
    color: @yellow;

    &.numeric,
    &.boolean {
        color: @orange;
    }
}

.variable {
    color: @blue;
}

.delimiter, .brace {
    color: @base0;
}

.delimiter.period {
    color: @green;
}

.invalid.deprecated {
    text-decoration: underline;
    color: @red;
}

.invalid.illegal {
    color: @red;
}

.string {
    color: @green;

    .constant.character.escape {
        color: @base0;
    }

    &.regexp {
        color: @cyan;

        .source.ruby.embedded,
        .string.regexp.arbitrary-repitition {
            color: @red;
        }
    }
}

.markdown-preview {
	color: #a7adba !important;
	background-color: #2b303b !important;

	h1, h2, h3, h4, h5, h6 {
		border-bottom: none !important;
	}

	code {
	    background-color: rgba(0, 0, 0, 0.2) !important;
	}
}

// feral additions/modifications

.tag {
  &.entity.name {
    color: @call;
  }
  &.punctuation {
    color: @subtle;
  }
}
.entity.other.attribute-name {
  color: @native;
}

.punctuation.embedded {
  color: @subtle;
}

.flowtype {
  &.property {
    color: @key;
  }
  &.type {
    color: @native;
    &.builtin.class {
      font-style: italic;
    }
    &.primitive {
      font-style: italic;
    }
    &.punctuation {
      color: @subtle;
    }
  }
  &.typedef {
    color: @highlight;
    font-style: italic;
  }
}

.js {
  &.boolean {
    color: @native;
  }
  &.class {
    &.builtin {
      color: @highlight;
    }
    &.name {
      color: white;
      font-style: italic;
    }
  }
  &.console {
    &.function {
      color: @call;
    }
    &.object {
      color: @highlight;
    }
  }
  &.constant.numeric {
    color: @highlight;
  }
  &.decorator {
    color: @call;
    .entity.name.tag {
      color: @call;
    }
    .punctuation {
      color: @call;
    }

  }
  &.function.entity.name {
    color: @keyCall;
  }
  &.string.quoted > .function.entity.name {
    color: @string;
  }
  &.function-call > .entity.name {
    color: @call;
  }
  &.keyword {
    color: @native;
    &.module {
      color: @highlight;
    }
    &.operator {
      color: @subtle;
    }
  }
  &.null {
    color: @dead;
  }
  &.object.key, &.function.method {
    .string.unquoted {
      color: @key;
    }
  }
  .punctuation {
    &.key-value, &.terminator {
      color: @subtle;
    }
  }
  &.variable {
    color: white;
    &.this {
      color: @highlight;
    }
  }
  &.storage {
    &.modifier {
      color: @native;
    }
  }
  &.type {
    color: @native;
    &.dom {
      color: @highlight;
    }
  }
}

.jsx {
  .class.component {
    color: @keyCall;
  }
}

.line-number.cursor-line .current-line {
  color: @highlight;
}
